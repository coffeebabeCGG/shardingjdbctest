spring.jpa.properties.hibernate.hbm2ddl.auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

#开启sharding-jdbc日志
spring.jpa.properties.hibernate.show_sql=true

sharding.jdbc.config.props.sql.show=true

sharding.jdbc.datasource.names=app1,app2

#将数据库分成 节点一和节点二
#节点一 主库配置
sharding.jdbc.datasource.app1.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.app1.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.app1.url=jdbc:mysql://127.0.0.1:3307/app1?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
sharding.jdbc.datasource.app1.username=root
sharding.jdbc.datasource.app1.password=654321

#节点一 从库配置
sharding.jdbc.datasource.app1-slave.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.app1-slave.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.app1-slave.url=jdbc:mysql://127.0.0.1:3308/app1?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&serverTimezone=GMT
sharding.jdbc.datasource.app1-slave.username=root
sharding.jdbc.datasource.app1-slave.password=654321

#节点二 主库配置
sharding.jdbc.datasource.app2.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.app2.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.app2.url=jdbc:mysql://127.0.0.1:3307/app2?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
sharding.jdbc.datasource.app2.username=root
sharding.jdbc.datasource.app2.password=654321

#节点二 从库配置
sharding.jdbc.datasource.app2-slave.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.app2-slave.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.app2-slave.url=jdbc:mysql://127.0.0.1:3308/app2?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&serverTimezone=GMT
sharding.jdbc.datasource.app2-slave.username=root
sharding.jdbc.datasource.app2-slave.password=654321


sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=id
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=app$->{(id % 2)+1}

sharding.jdbc.config.sharding.tables.user.actual-data-nodes=app$->{1..2}.user$->{1..2}
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.sharding-column=id
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.algorithm-expression=user$->{((""+id)[2..10].toInteger() % 2)+1}
sharding.jdbc.config.sharding.tables.user.key-generator-column-name=id

#sharding.jdbc.config.sharding.tables.t_order_item.actual-data-nodes=ds_$->{0..1}.t_order_item_$->{0..1}
#sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
#sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item_$->{order_id % 2}
#sharding.jdbc.config.sharding.tables.t_order_item.key-generator-column-name=order_item_id
#
#sharding.jdbc.config.sharding.master-slave-rules.ds_0.master-data-source-name=app1
#sharding.jdbc.config.sharding.master-slave-rules.ds_0.slave-data-source-names=app1-slave-0, app1-slave-1
#sharding.jdbc.config.sharding.master-slave-rules.ds_1.master-data-source-name=app2
#sharding.jdbc.config.sharding.master-slave-rules.ds_1.slave-data-source-names=app2-slave-0, app2-slave-1

spring.main.allow-bean-definition-overriding=true

mybatis-plus.mapper-locations= classpath:/mapper/*.xml

